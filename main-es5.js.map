{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/header/header.component.ts","webpack:///src/app/header/header.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/main-content/main-content.component.ts","webpack:///src/app/main-content/main-content.component.html","webpack:///src/app/news/news.component.ts","webpack:///src/app/news/news.component.html","webpack:///src/app/out-graph/out-graph.component.ts","webpack:///src/app/out-graph/out-graph.component.html","webpack:///src/app/prem.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","title","selector","templateUrl","styleUrls","appRoutes","path","component","redirectTo","AppModule","forRoot","declarations","imports","providers","bootstrap","HeaderComponent","scrollbarZ","preventionH","hrzel","targetel","clicked","HomeComponent","items","currentPrevention","observer","MutationObserver","mutations","forEach","mutationRecord","offset","y","offsetTop","setAttribute","document","querySelectorAll","init","querySelector","prevention_card","popup","element","addEventListener","res","getAttribute","item","text","scrollIntoView","getElementById","setTimeout","target","observe","attributes","attributeFilter","params","MainContentComponent","displayedColumns","items_w","chosenitem","scrollbarM","hrel","sort","console","log","s_data","slice","active","direction","a","b","isAsc","compare","num","country","confirmed","deaths","cured","death_per","setParams","selectedCountry","dat","cont","match","push","update","switchtow","switchtor","sortData","scrollbarnews","NewsComponent","http","world_sum_cured","world_sum_deaths","world_sum_confirmed","world_per_deaths","world_per_cured","russia_sum_cured","russia_sum_deaths","russia_sum_confirmed","russia_per_deaths","russia_per_cured","world_items","russia_items","textNews","isCurrent","isOpened","selectedNews","dataArray","arrayOfValute","EUR","USD","card","change_button","open_button","side_menu","get","responseType","subscribe","entries","index","length","scrollTo","data","Valute","Previous","Number","toFixed","dateSent","currentDate","Date","Math","floor","UTC","getFullYear","getMonth","getDate","toLocaleDateString","colors","OutGraphComponent","comp_colorConf","comp_colorCured","comp_colorDeaths","line_colorConf","line_colorCured","line_colorDeaths","selectedType","selectedpoint","isInit","isDestroyed","isButton","items_r","line_options","chart","type","plotOptions","series","allowPointSelect","cursor","subtitle","yAxis","xAxis","labels","enabled","credits","column_options","categories","showEmpty","colorByPoint","name","visible","comparechart","linechart","update_line","getParams","update_column","compare_data","changes","parentData","destroy","swap_type","initselected","selectedValue","getSelectedPoints","x","options","change_data","updateType","updatecolorline","updateselected","updatecolor","items_1","items_2","hichart","param","flag","datepoint","Object","values","c","d","dataconfirmed","datadeaths","datacured","value","date","secparam","ParamsModel","chosenitmf","chosenitms","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component,OnInit } from '@angular/core';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'testAPP';\n  \n}\n\n","<app-header></app-header>\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule }   from '@angular/forms';\r\nimport {Routes, RouterModule} from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport {MatButtonModule} from '@angular/material/button';\r\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {MatIconModule} from '@angular/material/icon';\r\nimport {MatInputModule} from '@angular/material/input';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatSidenavModule} from '@angular/material/sidenav';\r\nimport {MatSortModule} from '@angular/material/sort';\r\nimport {MatTableModule} from '@angular/material/table';\r\nimport {MatToolbarModule} from '@angular/material/toolbar';\r\nimport {ScrollingModule} from '@angular/cdk/scrolling';\r\nimport { HighchartsChartModule } from 'highcharts-angular';\r\nimport {ParamsModel} from \"src/app/prem\";\r\nimport { OutGraphComponent } from './out-graph/out-graph.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { MainContentComponent } from './main-content/main-content.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { NewsComponent } from './news/news.component';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', component: HomeComponent },\r\n    { path: 'main', component: MainContentComponent },\r\n    { path: 'news', component: NewsComponent },\r\n    { path: '**', redirectTo: '/' },\r\n];\r\n\r\n@NgModule({\r\n  declarations: [AppComponent, OutGraphComponent, HeaderComponent, MainContentComponent, HomeComponent, NewsComponent ],\r\n  imports: [\r\n      RouterModule.forRoot(appRoutes),\r\n    BrowserModule,\r\n    BrowserAnimationsModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatInputModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSortModule,\r\n    MatTableModule,\r\n    MatToolbarModule,\r\n    ScrollingModule,\r\n    HighchartsChartModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [ParamsModel],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css']\n})\nexport class HeaderComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<mat-toolbar color=\"primary\" class=\"header\">\r\n    <mat-toolbar-row>\r\n        <div class=\"items\">\r\n            <img src=\"assets/img/logo.png\" routerLink = \"/\" style=\"cursor: pointer;\">\r\n            <div class=\"tab\">\r\n                <div class=\"tab-nav\">\r\n                    <button mat-button routerLink = \"/main\">\r\n                        Статистика\r\n                    </button>\r\n                    <button mat-button routerLink =\"/news\">\r\n                        Новости\r\n                    </button>\r\n                </div>\r\n                <div class=\"tab-slash\"></div>\r\n                <div class=\"tab-inform\">Информация не соотвтествует действительности</div>\r\n            </div>\r\n        </div>\r\n        \r\n    </mat-toolbar-row>\r\n</mat-toolbar>","import { Component,DoCheck, OnInit } from '@angular/core';\nimport Scrollbar from 'smooth-scrollbar';\nimport * as prevention from 'src/app/home/prevention.json'\nimport { scrollTo, scrollIntoView, } from 'smooth-scrollbar/scrolling/';\nlet scrollbarZ: any;\nlet preventionH: any;\nlet hrzel: any;\nlet targetel: any;\nlet clicked: boolean = false;\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n  items: any = (prevention as any).default;\n  currentPrevention: string = \"\";\n  constructor() { \n  }\n  \n  observer:any = new MutationObserver(function(mutations) {\n    mutations.forEach(function(mutationRecord) {\n      if (!clicked){\n          if (scrollbarZ.offset.y >= hrzel[0].offsetTop) \n          {\n              if (scrollbarZ.offset.y >= (hrzel[1].offsetTop-200)) \n            {\n                if (scrollbarZ.offset.y >= (hrzel[2].offsetTop-200)) \n              {\n                targetel.setAttribute(\"id\",\"\");\n                preventionH[2].setAttribute(\"id\",\"target\");\n                targetel = preventionH[2];\n                return;\n              }\n              targetel.setAttribute(\"id\",\"\");\n              preventionH[1].setAttribute(\"id\",\"target\")\n              targetel = preventionH[1];\n              return;\n            }\n            targetel.setAttribute(\"id\",\"\");\n            preventionH[0].setAttribute(\"id\",\"target\")\n            targetel = preventionH[0];\n            return;\n          }\n        }\n        \n      });   \n  });\n\n  ngAfterViewInit() { \n    hrzel = document.querySelectorAll('.hidden-hr');\n    scrollbarZ = Scrollbar.init(document.querySelector('#my-home-scrollbar'));  \n    let prevention_card = document.querySelectorAll('.prevention-card');\n    let popup = document.querySelector('.popup-prevention');\n    prevention_card.forEach(element => {\n      element.addEventListener('mouseover', () => {\n        let res:string = \"visibility:visible; opacity: 1\";\n        switch (element.getAttribute(\"id\")) {\n          case \"1\": \n            popup.setAttribute(\"style\",\"left: 0; top: 210px;width: 60%;\" + res)\n            break;\n          case \"2\": \n            popup.setAttribute(\"style\",\"left: 45%; top: 0;\" + res)\n            break;\n          case \"3\":\n            popup.setAttribute(\"style\",\"right: 19%; top: 210px;\" + res) \n            break;\n          case \"4\": \n            popup.setAttribute(\"style\",\"left: 20%; top: 210px;\" + res)\n            break;\n          case \"5\": \n            popup.setAttribute(\"style\",\"left: 20%; bottom: 210px;\" + res)\n            break;\n          case \"6\": \n            popup.setAttribute(\"style\",\"right: 0; bottom: 210px; width: 100%;\" + res)\n            break;\n        }\n        for (let item of this.items) {\n          if (item.id == element.getAttribute(\"id\"))\n            this.currentPrevention = item.text; \n        }\n      });\n      element.addEventListener('mouseout', () => {\n        popup.setAttribute(\"style\",\"visibility:hidden; opacity: 0; transition: 0s\");\n      })\n    })\n    preventionH = document.querySelectorAll('.nav-cont');\n    preventionH.forEach(element => {\n      if (element.getAttribute(\"id\") == \"target\") {\n        targetel = element;\n      }\n      element.addEventListener('click', ()=> {\n        clicked = true;\n        scrollbarZ.scrollIntoView(document.getElementById(element.getAttribute('data-href')));\n        targetel.setAttribute(\"id\",\"\");\n        element.setAttribute(\"id\", \"target\");\n        targetel = element;\n        setTimeout(()=> {clicked = false}, 1000);\n      })\n    })\n    \n\n    let target = document.querySelector('#my-home-scrollbar .scroll-content');\n    this.observer.observe(target, { attributes : true, attributeFilter : ['style'] });\n  }\n  ngOnInit(): void {\n    \n  }\n  \n}\n","<mat-drawer-container class=\"main\"> \n                <mat-drawer-content class=\"main-content\"> \n                    <div class=\"nav\">\n                        <div class=\"nav-conainer\">\n                            <a id=\"target\" data-href=\"main\" class=\"nav-cont\">Коронавирус</a>\n                            <a id=\"\" data-href=\"history\" class=\"nav-cont\">История</a>\n                            <a id=\"\" data-href=\"prevention\" class=\"nav-cont\">Профилактика</a>\n                        </div>\n                    </div>             \n                    <div id=\"my-home-scrollbar\">\n                        <hr id=\"main\" class=\"hidden-hr\">\n                        <div class=\"first-wallpaper\">\n                            <div class=\"wallpaper-mask\">\n                                <div class=\"header\">\n                                    <h1 class=\"main-h1\">Коронавирусная инфекция COVID-19</h1>\n                                </div>  \n                            </div>\n                        </div>\n                        <div class=\"content\">\n                                <div class=\"concept-content\">\n                                    <div class=\"concept-header\">\n                                        <h1 class=\"content-h1\">Коронавирус</h1>\n                                    </div>\n                                    <hr class=\"hr\">\n                                    <div class=\"concept-main-body\">\n                                        <div class=\"concept-main-body-text\">\n                                        <p class=\"content-p\">Коронавирус - семейство вирусов, включающее на май 2020 года 43 вида РНК-содержащих вирусов, объединённых в два подсемейства, которые поражают млекопитающих, включая человека, птиц и земноводных. Название связано со строением вируса, шиповидные отростки которого напоминают солнечную корону. Известно 7 коронавирусов, поражающих человека:\n\n                                            HCoV-229E — Alphacoronavirus, впервые выявлен в середине 1960х годов;\n                                            HCoV-NL63 — Alphacoronavirus, возбудитель был выявлен в Нидерландах в 2004 году;\n                                            HCoV-OC43[en] — Betacoronavirus A, возбудитель выявлен в 1967 году;\n                                            HCoV-HKU1[en] — Betacoronavirus A, возбудитель обнаружен в Гонконге в 2005 году;\n                                            SARS-CoV — Betacoronavirus B, возбудитель тяжёлого острого респираторного синдрома, первый случай заболевания которым был зарегистрирован в 2002 году;\n                                            MERS-CoV — Betacoronavirus C, возбудитель ближневосточного респираторного синдрома, вспышка которого произошла в 2015 году;\n                                            SARS-CoV-2 — Betacoronavirus B, выявленный во второй половине 2019 и вызвавший пандемию пневмонии нового типа COVID-19.</p>\n                                        <p class=\"content-p\">Коронавирусы вызывают заболевания млекопитающих (людей, летучих мышей, кошек, собак, свиней, крупного рогатого скота) и птиц. Источниками коронавирусных инфекций могут быть больной человек, животные. Возможные механизмы передачи: воздушно-капельный, воздушно-пылевой, фекально-оральный, контактный. Заболеваемость растёт зимой и ранней весной. В структуре ОРВИ госпитализированных больных коронавирусная инфекция составляет в среднем 12 %. Иммунитет после перенесённой болезни непродолжительный, как правило, не защищает от реинфекции. О широкой распространённости коронавирусов свидетельствуют специфичные антитела, выявленные у 80 % людей.\n\n                                            Коронавирус человека впервые был выделен в 1965 году от больных ОРВИ Д. Тиррелом из носоглотки при остром рините, позже в 1975 году Э. Каул и С. Кларк выделили коронавирус из испражнений при детском энтероколите. В последующее время коронавирусы почти не привлекали внимание исследователей, пока в Китае в 2002—2003 годах не была зафиксирована вспышка атипичной пневмонии, или тяжёлого острого респираторного синдрома (ТОРС, SARS). Заболевание было вызвано вирусом SARS-CoV. В результате болезнь распространилась на другие страны, всего заболело 8273 человека, 775 умерло (летальность 9,6 %).\n                                            \n                                            Вирус MERS-CoV является возбудителем ближневосточного респираторного синдрома (MERS), первые случаи которого были зарегистрированы в 2012 году. В 2015 году в Южной Корее произошла вспышка ближневосточного респираторного синдрома, в ходе которой заболело 183 человека, умерло 33.\n                                            \n                                            В декабре 2019 года в Китае началась вспышка пневмонии, вызванная свежеобнаруженным вирусом SARS-CoV-2. Вскоре она распространилась на другие страны. </p>\n                                        </div>\n                                        <div class=\"concept-main-body-img\">\n                                                <div class=\"cov-img\"></div>\n                                        </div>\n                                       \n                                        </div>\n                                </div>\n                                <hr id=\"history\" class=\"hidden-hr\">\n                                <div class=\"history-content\">\n                                    <div class=\"history-header\">\n                                        <h1 class=\"content-h1\">История вируса: когда люди начали болеть COVID-19</h1>\n                                    </div>\n                                    <hr class=\"hr\">\n                                    <div class=\"history-main-body\">\n                                        <div class=\"history-main-body-text\">\n                                            <p class=\"content-p\">Все больше данных говорит о том, что на первом этапе распространение коронавируса происходит незаметно. Это дополнительный аргумент в пользу принятия жестких мер даже при появлении единичных случаев заболевания.</p>\n                                            <p class=\"content-p\">Ученые Китая, Италии и Испании независимо друг от друга пришли к выводу о появлении коронавируса в популяциях значительно раньше первых официально зарегистрированных случаев. И если Китай и Италия дают косвенную информацию об аномальных вспышках пневмонии, то в Испании свидетельство прямое — исследование эксгумированного.</p>\n                                            <h2 class=\"content-h2\">Ранняя циркуляция</h2>\n                                            <p class=\"content-p\">3 марта 2020 года из Испании пришла новость, которой многие не придали большого значения. Сообщалось, что в стране признана первая смерть от коронавируса, установленная методом ретроспективного исследования.\n                                                Власти Валенсии подтвердили, что еще 13 февраля от тяжелой пневмонии неизвестного происхождения умер мужчина 69 лет, вернувшийся из путешествия в Непал. Повторное вскрытие, проведенное после изменения Минздравом критериев поиска зараженных 27 февраля, дало положительный анализ на COVID-19. К этому моменту в регионе Валенсия числились 19 больных. На 27 марта их было уже 3,2 тыс., 167 умерли.\n                                                \n                                                В Италии, где так и не удалось определенно установить, от кого же заразился самый первый непривозной пациент, 38-летний Маттиа из Кодоньо, самые разные данные указывают на более раннюю циркуляцию вируса. Вирусологи из Университета Милана и миланского госпиталя Сакко утверждают, что картирование генома указывает на присутствие СOVID-2019 в Италии уже в ноябре. С этим согласуются данные медицинской статистики: нетипичные вспышки тяжелой пневмонии врачи наблюдали еще в октябре. Наконец, свежее детальное исследование лабораторных образцов в сочетании с опросом пациентов надежно устанавливает, что уже 20 февраля, в день постановки диагноза первому больному, вирус циркулировал в Южной Ломбардии. Происхождение болезни самого Маттиа изучали с помощью филогенетического исследования вирусного генома. Дело в том, что вирус постоянно мутирует и, изучая геном вирусов, взятых у разных больных в разных странах, можно проследить его эволюцию примерно так, как лингвисты изучают эволюцию языков. Судя по всему, инфицировавший Маттиа вирус связан с первой локальной вспышкой этой инфекции в Европе, которая произошла 19 января в Мюнхене, однако цепочку заражения от человека к человеку установить не удалось.</p>\n                                            <p class=\"content-p\">В Китае, который встретил вспышку тогда еще не известной болезни первым, официальной датой начала эпидемии считается 1 декабря 2019 года, когда был установлен первый пациент с необычными симптомами. Правда, South China Morning Post писала, что первый пациент был идентифицирован еще 17 ноября, причем он не считается «пациентом 0» — тем, кто заразился вирусом от животного, которое является его основным хозяином. Эпидемиологические данные Китая не столь открыты, как в Европе, а доверие к китайским источникам подрывает тот факт, что местные власти больше месяца отрицали передачу вируса от человека к человеку: мол, все случаи связаны с заражениями на одном из рынков Уханя. Однако итальянские исследователи из Университета Милана, основываясь на все том же картировании вирусного генома, утверждают в своей статье в Journal of Medical Virology, что вирус старше на несколько недель. И приходят к выводу, что эпидемия началась во второй половине октября или первой половине ноября.\n\n                                                Все эти данные свидетельствуют, что вирус приходит в популяцию задолго до того, как приносит видимые последствия. Все страны, исключая Китай, могли бы сдержать эпидемию, если бы знали об этой особенности. Циркуляцию вируса в Испании можно оценить, если считать, что смерть мужчины в Валенсии 13 февраля была первой. По статистике летальных исходов, заболевание от появления симптомов до смерти длится примерно восемь дней, инкубационный период — до 14 дней, причем заражать могут и бессимптомные больные. Таким образом, испанский пациент № 1 мог заразиться еще в конце января. Всю первую половину февраля он мог распространять заболевание, так как не был диагностирован и даже при содержании его в больнице не применялись меры предосторожности, обязательные сейчас для работы с COVID-пациентами. Официально первый случай коронавируса в Испании был зарегистрирован 9 февраля на Канарских островах, а второй — 25 февраля в Барселоне, но оба касались тех, кто прибыл из-за рубежа, из Италии и Франции. Сведения о переносчиках из-за границы циркулировали до конца февраля, хотя теперь понятно, что уже с начала января в стране происходило активное распространение болезни.\n                                                \n                                                Сходный промежуток можно получить, отследив путь первого, к счастью выжившего, итальянского пациента. Он обратился к врачу 14 февраля, значит мог заразиться в самом начале месяца и распространять инфекцию еще до появления симптомов. Диагноз пациенту был поставлен только 20 февраля, и за это время он заразил несколько медицинских работников, жену и неизвестное число соседей. Уже нельзя установить, сколько еще человек переболели в это же время бессимптомно, запустив вспышку. Ошибкой Италии стало то, что до диагноза Маттиа там тестировали только прибывающих из-за границы. Республика первой, еще 31 января, приостановила авиасообщение с Китаем, но это мера, как сейчас понятно, не оказала на эпидемию никакого воздействия: вирус уже был в Европе.</p>\n                                            <h2 class=\"content-h2\">Поиск иммунитета</h2>\n                                            <p class=\"content-p\">Почему важны эти данные? Они могут помочь принять правильные решения там, где эпидемия пока малозаметна (например, во многих странах Азии и Африки или некоторых регионах России). Своевременная реакция позволит не пойти по пути Италии, Испании и США, а сохранить высокую степень выявления инфицированных, как в Германии, чтобы своевременно изолировать и госпитализировать тех, кто в этом нуждается.\n\n                                                Но еще важнее другое. Факт незаметного распространения бессимптомными носителями означает, что число переболевших гораздо больше официального, поэтому страны, перенесшие эпидемию, могут оказаться ближе к коллективному иммунитету, чем мы думаем. 16 марта в журнале Science вышла статья китайских ученых, которые провели математическое моделирование распространения коронавирусной инфекции в КНР с учетом информации о транспортных потоках. Они сравнили два дня течения эпидемии, до введения ограничений на передвижение внутри страны и после, и заключили, что 86% всех заражений проходили незамеченными из-за отсутствия или очень слабой выраженности симптомов. Причем больной без симптомов был всего лишь вполовину менее заразным. С одной стороны, это означает, что без массового тестирования эпидемию не остановить. С другой — что летальность вируса все-таки не 9%, как в Италии, а около 0,4%, как была в какой-то момент в Германии (что все равно примерно в десять раз больше, чем при обычном гриппе). Ту же величину приводил в своем исследовании и британский эпидемиолог Нил Фергюсон.</p>\n                                            <p class=\"content-p\">А если предположение о множестве переболевших верно, то их можно выявить по наличию антител в крови. Пока такого теста нет (хотя, например, его обещают вот-вот выпустить в Великобритании), но после его появления и внедрения, переболевшим, возможно, не нужно будет соблюдать карантин. Если, конечно, иммунитет к коронавирусу окажется достаточно устойчивым.</p>    \n                                        </div>\n                                    </div>\n                                </div>\n                                <hr id=\"prevention\" class=\"hidden-hr\">\n                                <div class=\"prevention-content\">\n                                    <div class=\"prevention-header\">\n                                        <h1 class=\"content-h1\">Профилактика коронавируса:</h1>\n                                    </div>\n                                    <hr class=\"hr\">\n                                    <div class=\"cards\">\n                                        <div class=\"prevention-cards-content\">\n                                            <div class=\"popup-prevention\">\n                                                <p class=\"popup-prevention-p\">{{currentPrevention}}</p>\n                                            </div>\n                                            <div class=\"cards-board\">\n                                                <mat-card class=\"prevention-card\" id=\"1\">\n\n                                                        <img src=\"assets/img/wash-hands.png\"><p>Регулярно мойте руки</p>\n                                        \n                                                </mat-card>\n                                                <mat-card class=\"prevention-card\" id=\"2\">\n                                                    <img src=\"assets/img/social-distance.png\"><p>Соблюдайте дистанцию в общественных местах</p>\n                                                </mat-card>\n                                                <mat-card class=\"prevention-card\" id=\"3\">\n                                                    <img src=\"assets/img/cant-touch-this.png\"><p>По возможности, не трогайте руками глаза, нос и рот</p>\n                                                </mat-card>\n                                                <mat-card class=\"prevention-card\" id=\"4\">\n                                                    <img src=\"assets/img/cough.png\"><p>Соблюдайте правила респираторной гигиены</p>\n                                                </mat-card>\n                                                <mat-card class=\"prevention-card\" id=\"5\">\n                                                    <img src=\"assets/img/call.png\"><p>При повышении температуры, появлении кашля и затруднении дыхания как можно быстрее обращайтесь за медицинской помощью</p>\n                                                </mat-card>\n                                                <mat-card class=\"prevention-card\" id=\"6\">\n                                                    <img src=\"assets/img/read-news.png\"><p>Следите за новейшей информацией и выполняйте рекомендации медицинских специалистов</p>\n                                                </mat-card>\n                                            </div>\n                                        </div>\n                                        <div class=\"hotline-conteiner\">\n                                            <div class=\"hotline-header\">\n                                                <h1 class=\"content-h1\">Горячая линия</h1>\n                                            </div>\n                                            <div class=\"hotline-content\">\n                                                <p class=\"content-p\">Достоверная информация с новостями о коронавирусе размещена на сайтах Минздрава России, Роспотребнадзора и Всемирной организации здравоохранения. Не доверяйте непроверенным источникам и не поддавайтесь панике.</p>\n                                            </div>\n                                            <div class=\"hotline-card-container\">\n                                                <mat-card class=\"hotline-card\">\n                                                    <div class=\"hotline-card-header\">Горячая линия COVID-19</div>\n                                                    <div class=\"hotline-card-text\">8 800 555 3 535</div>\n                                                </mat-card>\n                                                <mat-card class=\"hotline-card\">\n                                                    <div class=\"hotline-card-header\">Горячая линия Минздрава России</div>\n                                                    <div class=\"hotline-card-text\">8 800 200 0 200</div>\n                                                </mat-card>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                        </div>\n                    </div>\n                \n                </mat-drawer-content>\n</mat-drawer-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Sort } from '@angular/material/sort';\nimport { ParamsModel } from 'src/app/prem';\nimport * as data from 'src/app/df.json';\nimport * as data_r from 'src/app/df_r.json';\nimport Scrollbar from 'smooth-scrollbar';\n\n\n\nclass item {\n    confirmed: number;\n    country: string;\n    cured: number;\n    death_per: number;\n    deaths: number;\n    num: number;\n}\n\n\n@Component({\n  selector: 'app-main-content',\n  templateUrl: './main-content.component.html',\n  styleUrls: ['./main-content.component.css']\n})\nexport class MainContentComponent {\n    selectedCountry: any;\n    selectedRow : Number;\n    setClickedRow : Function;\n    scrollbarM: any;\n    hrel: any;\n    ngAfterViewInit() {\n        \n        Scrollbar.init(document.querySelector('#my-scrollbar'));\n        this.scrollbarM = Scrollbar.init(document.querySelector('#main-content-scrollbar'));\n        this.hrel = document.getElementById('graphs');\n    }\n    constructor(public params:ParamsModel) {\n    };\n  \n    displayedColumns: string[] = ['num', 'country', 'confirmed', 'deaths', 'cured', 'death_per'];\n\n    items: any = (data as any).default;\n    items_w = this.items;\n    chosenitem: item[] = this.items[0];\n    \n    sortData(sort: Sort) {\n        console.log(\"sortData\");\n        const s_data = this.items.slice();\n        if (!sort.active || sort.direction === '') {\n            this.items = s_data;\n            return;\n        }\n\n        this.items_w = s_data.sort((a, b) => {\n            const isAsc = sort.direction === 'asc';\n            switch (sort.active) {\n                case 'num': return compare(a.num, b.num, isAsc);\n                case 'country': return compare(a.country, b.country, isAsc);\n                case 'confirmed': return compare(a.confirmed, b.confirmed, isAsc);\n                case 'deaths': return compare(a.deaths, b.deaths, isAsc);\n                case 'cured': return compare(a.cured, b.cured, isAsc);\n                case 'death_per': return compare(a.death_per, b.death_per, isAsc);\n                default: return 0;\n            }\n        });\n    }\n    switchtor():void {\n        console.log(\"switchtor\");\n        this.items = (data_r as any).default;\n        this.items_w = this.items;\n        this.chosenitem = this.items[0];\n        this.params.setParams(this.chosenitem);\n    }\n    switchtow():void{\n        console.log(\"stirchtow\");\n        this.items = (data as any).default;\n        this.items_w = this.items;\n        this.chosenitem = this.items[0];\n        this.params.setParams(this.chosenitem);\n    }\n    update() {\n        console.log(\"update\");\n        if (this.selectedCountry != '') {\n            this.items_w = [];\n            for (let dat of this.items) {\n                let cont = dat.country\n                if (cont.match(this.selectedCountry)) { this.items_w.push(dat)}\n            } \n        } else { this.items_w = []; this.items_w = this.items}\n    }\n    scroll () {\n        \n        this.scrollbarM.scrollIntoView(this.hrel);\n    }\n}\nfunction compare(a: number | string, b: number | string, isAsc: boolean) {\n    console.log(\"update\");\n    return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","<div class=\"main\">\r\n    <div id=\"main-content-scrollbar\">\r\n    <mat-drawer-container class=\"main-content\">\r\n        <div class=\"mat-drawer-header\">\r\n            <div class=\"search-bar\">\r\n                <div class=\"search-bar-border\">\r\n                    <mat-form-field class=\"example-full-width\" >\r\n                        <mat-label>Поиск</mat-label>\r\n                        <input matInput [(ngModel)]=\"selectedCountry\" (ngModelChange)=\"update()\" color=\"basic\">\r\n                        <button mat-button *ngIf=\"selectedCountry\" matSuffix mat-icon-button aria-label=\"Clear\" (click)=\"[selectedCountry='', update()]\">\r\n                            <mat-icon>close</mat-icon>\r\n                        </button>                 \r\n                    </mat-form-field>\r\n                </div>    \r\n            </div>\r\n            <mat-button-toggle-group class=\"dashboard_buttons\" value=\"world\">\r\n                <mat-button-toggle value=\"world\" id=\"but_ch\" (click)=\"switchtow()\">Мир</mat-button-toggle >\r\n                <mat-button-toggle value=\"russia\" id=\"but_ch\" (click)=\"switchtor()\">РФ</mat-button-toggle>\r\n            </mat-button-toggle-group>\r\n            <div id=\"my-scrollbar\">\r\n\r\n                    <table mat-table [dataSource]=\"items_w\"  matSort (matSortChange)=\"sortData($event)\" matSortDisableClear>\r\n                            <ng-container matColumnDef=\"num\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header=\"num\">Место</th>\r\n                                <td class=\"example-element-\" mat-cell *matCellDef=\"let item\"> {{item.num}} </td>\r\n                            </ng-container>\r\n                            <ng-container matColumnDef=\"country\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header=\"country\" style=\"text-align: center\">Страна, город</th>\r\n                                <td class=\"example-element-\" mat-cell *matCellDef=\"let item\"> {{item.country}} </td>\r\n                            </ng-container>\r\n                            <ng-container matColumnDef=\"confirmed\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header=\"confirmed\">Зараженных</th>\r\n                                <td class=\"example-element-\" mat-cell *matCellDef=\"let item\"> {{item.confirmed}} </td>\r\n                            </ng-container>\r\n                            <ng-container matColumnDef=\"deaths\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header=\"deaths\">Смертей</th>\r\n                                <td class=\"example-element-\" mat-cell *matCellDef=\"let item\"> {{item.deaths}} </td>\r\n                            </ng-container>\r\n                            <ng-container matColumnDef=\"cured\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header=\"cured\">Выздоровевших</th>\r\n                                <td class=\"example-element-\" mat-cell *matCellDef=\"let item\"> {{item.cured}} </td>\r\n                            </ng-container>\r\n                            <ng-container matColumnDef=\"death_per\">\r\n                                <th mat-header-cell *matHeaderCellDef mat-sort-header=\"death_per\">Процент смертности</th>\r\n                                <td class=\"example-element-\" mat-cell *matCellDef=\"let item\"> {{item.death_per}} </td>\r\n                            </ng-container>\r\n                            <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"\r\n                                class=\"example-element-row\"                            \r\n                                [class.example-expanded-row]=\"chosenitem === row\"\r\n                                \r\n                                [class.active]=\"row === chosenitem\"\r\n                                (click)=\"row === chosenitem ? [chosenitem=null, params.setParams(chosenitem)] : [chosenitem = row, params.setParams(chosenitem), scroll()]\">\r\n                            </tr>\r\n                            <tr mat-header-row *matHeaderRowDef=\"displayedColumns;sticky: true\"></tr>\r\n                    </table>\r\n\r\n            </div>\r\n        </div>\r\n        <hr class=\"hidden-hr-main\" id=\"graphs\">\r\n        <div class=\"graphs-content\">\r\n            <app-out-graph [parentData]=\"params.getParams()\"></app-out-graph>\r\n        </div>\r\n        </mat-drawer-container>    \r\n    </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'; \nimport Scrollbar from 'smooth-scrollbar';\nimport * as data from 'src/app/news/news.json';\n//let card = document.getElementsByClassName(\"news-card\");\nimport * as data_stat_W from 'src/app/df.json'\nimport * as data_stat_R from 'src/app/df_r.json'\nlet scrollbarnews: any;\n@Component({\n  selector: 'app-news',\n  templateUrl: './news.component.html',\n  styleUrls: ['./news.component.css']\n})\nexport class NewsComponent implements OnInit {\n  constructor(private http: HttpClient) {\n  \n   }\n  world_sum_cured : number = 0;\n  world_sum_deaths: number = 0;\n  world_sum_confirmed: number = 0;\n  world_per_deaths: number = 0;\n  world_per_cured: number = 0;\n  russia_sum_cured: number = 0;\n  russia_sum_deaths: number = 0;\n  russia_sum_confirmed: number = 0;\n  russia_per_deaths: number = 0;\n  russia_per_cured: number = 0;\n  world_items: any = (data_stat_W as any).default;\n  russia_items: any = (data_stat_R as any).default;\n\n  textNews: string = \"\";\n  car: any;\n  isCurrent: boolean = false;\n  isOpened: boolean = false;\n  items: any = (data as any).default;\n  selectedNews: any = this.items[0];\n  scroll: any;\n  dataArray: any = [];\n  arrayOfValute: any = {\n    EUR : 0,\n    USD : 0\n  };\n  \n  ngAfterViewInit() {\n    Scrollbar.init(document.querySelector('#my-news-scrollbar'));  \n    scrollbarnews = Scrollbar.init(document.querySelector('#c-scrollbar'));\n    let card = document.querySelectorAll(\".news-card\")\n    let change_button = document.querySelectorAll(\".material-icons\");\n    let open_button = document.querySelectorAll(\"#open-side-content\");\n    let side_menu = document.querySelector(\".side-statistics-container\");\n\n    \n    \n    \n\n    open_button.forEach(element => {\n      element.addEventListener('click', () => {\n        if (this.isOpened) {\n          side_menu.setAttribute(\"style\", \"width: 0%\");\n          this.isOpened = false;\n        } else {side_menu.setAttribute(\"style\", \"width: 10%\"); this.isOpened = true;}\n      })\n    })\n    card.forEach(element => {\n      element.addEventListener('click', () => {\n        for (let item of this.items){\n          if (element.getAttribute(\"title\") == item.title) {\n            this.selectedNews = item;\n            this.http.get(this.selectedNews.text, { responseType: 'text' }).subscribe(dat=> {this.textNews = dat});\n            this.isCurrent = true;\n          }\n        }        \n      })\n    });\n    change_button.forEach(element => {\n      element.addEventListener('click', () =>  {\n        if (element.getAttribute(\"id\") == \"forward-but\" ){\n          for ( let [index, item] of this.items.entries()) {\n            if (item.title === this.selectedNews.title) {\n              if (index === (this.items.length - 1)) {\n                this.selectedNews = this.items[0];  \n              } else {   \n                this.selectedNews = this.items[index +1];\n              }\n              this.http.get(this.selectedNews.text, { responseType: 'text' }).subscribe(dat=> {this.textNews = dat});\n              scrollbarnews.scrollTo(0, 0);\n              break;\n            }                \n          };\n        }\n        if (element.getAttribute(\"id\") == \"backward-but\" ){\n          for ( let [index, item] of this.items.entries()) {\n            if (item.title === this.selectedNews.title) {\n              if (index == 0) {\n                this.selectedNews = this.items[this.items.length-1]\n              } else { \n                this.selectedNews = this.items[index-1] \n              }\n              this.http.get(this.selectedNews.text, { responseType: 'text' }).subscribe(dat=> {this.textNews = dat});\n              scrollbarnews.scrollTo(0, 0);\n              break;\n            }\n          }\n        }\n      })\n        \n    });\n  }\n  \n  ngOnInit(): void {\n    \n    this.http.get(\"https://www.cbr-xml-daily.ru/daily_json.js\").subscribe(data => { this.dataArray = data; this.arrayOfValute.USD = this.dataArray.Valute.USD.Previous; this.arrayOfValute.EUR = this.dataArray.Valute.EUR.Previous;});\n    for (let [index, item] of this.world_items.entries()) {\n      this.world_sum_confirmed += item.confirmed;\n      this.world_sum_deaths += item.deaths;\n      this.world_sum_cured += item.cured;\n    }\n    for (let [index, item] of this.russia_items.entries()) {\n      this.russia_sum_confirmed += item.confirmed;\n      this.russia_sum_deaths += item.deaths;\n      this.russia_sum_cured += item.cured;\n    }\n    this.world_per_deaths = Number((this.world_sum_deaths/this.world_sum_confirmed).toFixed(2));\n    this.world_per_cured = Number((this.world_sum_cured/this.world_sum_confirmed).toFixed(2));\n    this.russia_per_cured = Number((this.russia_sum_cured/this.russia_sum_confirmed).toFixed(2));\n    this.russia_per_deaths = Number((this.russia_sum_deaths/this.russia_sum_confirmed).toFixed(2));\n    \n  }\n  calculateDiff(dateSent){\n    let currentDate = new Date();\n    dateSent = new Date(dateSent);\n    return Math.floor((Date.UTC(currentDate.getFullYear(), currentDate.getMonth(), currentDate.getDate()) - Date.UTC(dateSent.getFullYear(), dateSent.getMonth(), dateSent.getDate()) ) /(1000 * 60 * 60 * 24));\n  }\n  calculateDiffDate(dateSent){\n    let currentDate = new Date();\n    dateSent = new Date(dateSent);\n    return (dateSent.toLocaleDateString());\n  }\n\n}\n","<mat-drawer-container class=\"main\"> \r\n    <mat-drawer-content class=\"main-content\">\r\n        <div class=\"current-news\" [style.visibility]=\"isCurrent ? 'visible' : 'hidden'\" [style.opacity]=\"isCurrent ? '1' : '0'\">\r\n            <div class=\"curerent-news-space\">\r\n                <button mat-button id=\"backward\">\r\n                    <i class=\"material-icons\" id=\"backward-but\">chevron_left</i>\r\n                </button>\r\n                <button mat-button id=\"forward\">\r\n                    <i class=\"material-icons\" id=\"forward-but\">chevron_right</i>\r\n                </button>\r\n                <button mat-button id=\"exit\">\r\n                    <i class=\"material-icons\" (click)=\"isCurrent=false\">close</i>\r\n                </button>\r\n                <mat-card class=\"current-news-card\">\r\n                    <div id=\"c-scrollbar\">\r\n                        <div class=\"content-current-card\">\r\n                            <div class=\"current-tag\">{{selectedNews.tag}}</div>\r\n                            <div class=\"current-title\">\r\n                                <span>{{selectedNews.title}}</span>\r\n                            </div>\r\n                            <div class=\"current-date\">\r\n                                <time datetime=\"YYYY-MM-DDThh:mm:ssTZD\">{{selectedNews.date}}</time>\r\n                            </div>\r\n                            <div class=\"current-image\">\r\n                                <picture class=\"current-picture\">\r\n                                    <img src={{selectedNews.img}}>\r\n                                </picture>\r\n                            </div>\r\n                            <div class=\"current-text\">\r\n                                <p>{{textNews}}</p>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                    </div>\r\n                </mat-card>\r\n            </div>  \r\n            <div id=\"overlay\" (click)=\"isCurrent=false\"></div>       \r\n        </div>\r\n        \r\n        <div id=\"my-news-scrollbar\">\r\n            \r\n            <div class=\"side-statistics-container\">\r\n                <mat-card class=\"statistics-card\">\r\n                    <div class=\"econonmy-panel\">\r\n                        <div class=\"info-header\">\r\n                            <span>Информация актуальна на {{calculateDiffDate(dataArray.PreviousDate)}}</span>\r\n                        </div>\r\n                        <div class=\"info-body\">\r\n                            <div class=\"econonmy-vid\">\r\n                                <div class=\"vid-header\">\r\n                                    <span>Курс доллара США</span>\r\n                                </div>\r\n                                <div class=\"vid-body\">\r\n                                    <span>$ {{arrayOfValute.USD}}</span>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                            <div class=\"econonmy-vid\">\r\n                                <div class=\"vid-header\">\r\n                                    <span>Курс евро</span>\r\n                                </div>\r\n                                <div class=\"vid-body\">\r\n                                    <span>€ {{arrayOfValute.EUR}}</span>\r\n                                </div>\r\n                                \r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"c19-statistics\">\r\n                        <div class=\"c19-statistics-vid\">\r\n                            <div class=\"vid-header\">\r\n                                <div id=\"pointer\" style=\"background-color: rgb(212, 37, 51);\"></div>\r\n                                <span>Зараженные</span>\r\n                            </div>\r\n                            <div class=\"vid-body\">\r\n                                <div class=\"world-stat\">\r\n                                    <span>Мир: {{world_sum_confirmed}}</span>\r\n                                </div>\r\n                                <div class=\"russia-stat\">\r\n                                    <span>Россия: {{russia_sum_confirmed}}</span>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div class=\"c19-statistics-vid\">\r\n                            <div class=\"vid-header\">\r\n                                <div id=\"pointer\" style=\"background-color: rgb(41, 27, 28);\"></div>\r\n                                <span>Умершие</span>\r\n                            </div>\r\n                            <div class=\"vid-body\">\r\n                                <div class=\"world-stat\">\r\n                                    <span>Мир: {{world_sum_deaths}} ({{world_per_deaths}}%)</span>\r\n                                </div>\r\n                                <div class=\"russia-stat\">\r\n                                    <span>Россия: {{russia_sum_deaths}} ({{russia_per_deaths}}%)</span>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div class=\"c19-statistics-vid\">\r\n                            <div class=\"vid-header\">\r\n                                <div id=\"pointer\" style=\"background-color: rgb(202, 235, 55);\"></div>\r\n                                <span>Выздоровевшие</span>\r\n                            </div>\r\n                            <div class=\"vid-body\">\r\n                                <div class=\"world-stat\">\r\n                                    <span>Мир: {{world_sum_cured}} ({{world_per_cured}}%)</span>\r\n                                </div>\r\n                                <div class=\"russia-stat\">\r\n                                    <span>Россия: {{russia_sum_cured}} ({{russia_per_cured}}%)</span>\r\n                                </div>\r\n                            </div>\r\n                            \r\n                        </div>   \r\n                        \r\n                    </div>\r\n                </mat-card> \r\n            </div>\r\n            <div class=\"content\">\r\n                <div class=\"news-container\">\r\n                    <div class=\"header-statistics\"></div>\r\n                    <div class=\"cards-board\" >\r\n                        \r\n                        <div class=\"section-to-3\">\r\n                            <mat-card class=\"news-card\" data-title={{items[0].title}}>\r\n                                <div class=\"image-card\">\r\n                                    <picture class=\"card-picture\">\r\n                                        <img src={{items[0].img}}>\r\n                                    </picture>\r\n                                </div>\r\n                                <div class=\"content-card\">\r\n                                    <div class=\"tag\">{{items[0].tag}}</div>\r\n                                    <div class=\"title\">\r\n                                        <span>{{items[0].title}}</span>\r\n                                    </div>\r\n                                    <div class=\"date\">\r\n                                        <span>{{calculateDiff(items[0].date)}} дней назад</span>\r\n                                    </div>\r\n                                </div>\r\n                            </mat-card>\r\n                            <mat-card class=\"news-card\" data-title={{items[1].title}}>\r\n                                <div class=\"image-card\">\r\n                                    <picture class=\"card-picture\">\r\n                                        <img src={{items[1].img}}>\r\n                                    </picture>\r\n                                </div>\r\n                                <div class=\"content-card\">\r\n                                    <div class=\"tag\">{{items[1].tag}}</div>\r\n                                    <div class=\"title\">\r\n                                        <span>{{items[1].title}}</span>\r\n                                    </div>\r\n                                    <div class=\"date\">\r\n                                        <span>{{calculateDiff(items[1].date)}} дней назад</span>\r\n                                    </div>\r\n                                </div>\r\n                            </mat-card>\r\n                            <mat-card class=\"news-card\" data-title={{items[2].title}}>\r\n                                <div class=\"image-card\">\r\n                                    <picture class=\"card-picture\">\r\n                                        <img src={{items[2].img}}>\r\n                                    </picture>\r\n                                </div>\r\n                                <div class=\"content-card\">\r\n                                    <div class=\"tag\">{{items[2].tag}}</div>\r\n                                    <div class=\"title\">\r\n                                        <span>{{items[2].title}}</span>\r\n                                    </div>\r\n                                    <div class=\"date\">\r\n                                        <span>{{calculateDiff(items[2].date)}} дней назад</span>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </mat-card>\r\n                        </div>\r\n                        <div class=\"section-to-1\">\r\n                            <mat-card class=\"news-card\" data-title={{items[3].title}}>\r\n                                <div class=\"image-card\">\r\n                                    <picture class=\"card-picture\">\r\n                                        <img src={{items[3].img}}>\r\n                                    </picture>\r\n                                </div>\r\n                                <div class=\"content-card\">\r\n                                    <div class=\"tag\">{{items[3].tag}}</div>\r\n                                    <div class=\"title\">\r\n                                        <span>{{items[3].title}}</span>\r\n                                    </div>\r\n                                    <div class=\"date\">\r\n                                        <span>{{calculateDiff(items[3].date)}} дней назад</span>\r\n                                    </div>\r\n                                </div>\r\n                            </mat-card>\r\n                        </div>\r\n                        <div class=\"section-to-3\">\r\n                            <mat-card class=\"news-card\" data-title={{items[4].title}}>\r\n                                <div class=\"image-card\">\r\n                                    <picture class=\"card-picture\">\r\n                                        <img src={{items[4].img}}>\r\n                                    </picture>\r\n                                </div>\r\n                                <div class=\"content-card\">\r\n                                    <div class=\"tag\">{{items[4].tag}}</div>\r\n                                    <div class=\"title\">\r\n                                        <span>{{items[4].title}}</span>\r\n                                    </div>\r\n                                    <div class=\"date\">\r\n                                        <span>{{calculateDiff(items[4].date)}} дней назад</span>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </mat-card>\r\n                            <mat-card class=\"news-card\" data-title={{items[5].title}}>\r\n                                <div class=\"image-card\">\r\n                                    <picture class=\"card-picture\">\r\n                                        <img src={{items[5].img}}>\r\n                                    </picture>\r\n                                </div>\r\n                                <div class=\"content-card\">\r\n                                    <div class=\"tag\">{{items[5].tag}}</div>\r\n                                    <div class=\"title\">\r\n                                        <span>{{items[5].title}}</span>\r\n                                    </div>\r\n                                    <div class=\"date\">\r\n                                        <span>{{calculateDiff(items[5].date)}} дней назад</span>\r\n                                    </div>\r\n                                </div>\r\n                            </mat-card>\r\n                            <mat-card class=\"news-card\" data-title={{items[6].title}}>\r\n                                <div class=\"image-card\">\r\n                                    <picture class=\"card-picture\">\r\n                                        <img src={{items[6].img}}>\r\n                                    </picture>\r\n                                </div>\r\n                                <div class=\"content-card\">\r\n                                    <div class=\"tag\">{{items[6].tag}}</div>\r\n                                    <div class=\"title\">\r\n                                        <span>{{items[6].title}}</span>\r\n                                    </div>\r\n                                    <div class=\"date\">\r\n                                        <span>{{calculateDiff(items[6].date)}} дней назад</span>\r\n                                    </div>\r\n                                </div>\r\n                                \r\n                            </mat-card>\r\n                        </div>\r\n                        <div class=\"section-to-2\">\r\n                            <mat-card class=\"news-card\" data-title={{items[7].title}}>\r\n                                <div class=\"image-card\">\r\n                                    <picture class=\"card-picture\">\r\n                                        <img src={{items[7].img}}>\r\n                                    </picture>\r\n                                </div>\r\n                                <div class=\"content-card\">\r\n                                    <div class=\"tag\">{{items[7].tag}}</div>\r\n                                    <div class=\"title\">\r\n                                        <span>{{items[7].title}}</span>\r\n                                    </div>\r\n                                    <div class=\"date\">\r\n                                        <span>{{calculateDiff(items[7].date)}} дней назад</span>\r\n                                    </div>\r\n                                </div>\r\n                            </mat-card>\r\n                            <mat-card class=\"news-card\" data-title={{items[8].title}}>\r\n                                <div class=\"image-card\">\r\n                                    <picture class=\"card-picture\">\r\n                                        <img src={{items[8].img}}>\r\n                                    </picture>  \r\n                                </div>\r\n                                <div class=\"content-card\">\r\n                                    <div class=\"tag\">{{items[8].tag}}</div>\r\n                                    <div class=\"title\">\r\n                                        <span>{{items[8].title}}</span>\r\n                                    </div>\r\n                                    <div class=\"date\">\r\n                                        <span>{{calculateDiff(items[8].date)}} дней назад</span>\r\n                                    </div>\r\n                            </div>\r\n                            </mat-card>\r\n                        </div>\r\n                    </div>\r\n                    \r\n                </div>\r\n            </div>\r\n        </div>\r\n    </mat-drawer-content>\r\n</mat-drawer-container>\r\n","import { Component,OnInit,Input } from '@angular/core';\r\nimport * as Highcharts from 'highcharts';\r\nimport { SimpleChanges } from '@angular/core';\r\nimport { ParamsModel } from 'src/app/prem';\r\n\r\nimport * as data from 'src/app/ddf_russia.json';\r\nimport * as data_w from 'src/app/ddf_world.json';\r\nimport * as data_lw from 'src/app/df.json';\r\nimport * as data_lr from 'src/app/df_r.json';\r\nlet dataArray: any;\r\n\r\nHighcharts.setOptions({\r\n    colors: ['#058DC7', '#50B432', '#ED561B']\r\n});\r\n\r\n\r\n@Component({\r\n  selector: 'app-out-graph',\r\n  templateUrl: './out-graph.component.html',\r\n  styleUrls: ['./out-graph.component.css']\r\n})\r\nexport class OutGraphComponent  {   \r\n    comp_colorConf: string = '#058DC7';\r\n    comp_colorCured: string = '#50B432';\r\n    comp_colorDeaths: string = '#ED561B';\r\n\r\n    line_colorConf: string = '#058DC7';\r\n    line_colorCured: string = '#50B432';\r\n    line_colorDeaths: string = '#ED561B';\r\n\r\n    selectedType: string = 'line';\r\n    compare_data: any;\r\n    selectedValue: string;\r\n    selectedpoint: any = null;\r\n    backupchart: any;\r\n    linechart: any;\r\n    comparechart: any;\r\n    isInit: boolean = false;\r\n    isDestroyed: boolean = false;\r\n    isButton: boolean = false;\r\n    @Input() parentData: any;\r\n    items_w: any = (data_lw as any).default;\r\n    items_r: any = (data_lr as any).default;\r\n\r\n    line_options: any = {\r\n        chart: {\r\n            type: this.selectedType,\r\n        },\r\n        plotOptions: {\r\n            series: {\r\n                allowPointSelect: true,\r\n                cursor: 'pointer'\r\n            }\r\n        },\r\n        subtitle: {\r\n            text: 'Статистика с 28.04.2020 по 28.05.2020'\r\n        },\r\n        yAxis: {\r\n            title: {\r\n                text: \"Количество\"\r\n            }\r\n        },\r\n        xAxis: {\r\n            labels: {\r\n                enabled: false\r\n            }\r\n        },\r\n        series: [{\r\n                data: 0\r\n            },\r\n            {\r\n                data: 0\r\n            },\r\n            {\r\n                data: 0\r\n            }\r\n        ],\r\n        credits: {\r\n            enabled: false\r\n        },\r\n    };\r\n    column_options: any = {\r\n        subtitle: {\r\n            text: 'Число зараженных на момент 28.05.2020 с учетом количества выздоровевших и умерших'\r\n        },\r\n        chart: {\r\n            type: 'column',\r\n        },\r\n        title: {\r\n            text: \"Графики сравнения\"\r\n        },\r\n        \r\n        yAxis: {\r\n            title: {\r\n                text: \"Количество\"\r\n            }\r\n        },\r\n        xAxis: {\r\n            categories: ['Зараженные (актуальные данные)','Выздоровевшие','Умершие'],\r\n            showEmpty: true\r\n        },\r\n        series: [{\r\n                colorByPoint: true,    \r\n                data: 0\r\n                \r\n            },\r\n            {\r\n                name: \"Выберите страну\",\r\n                colorByPoint: true,  \r\n                data: 0,\r\n                visible: false\r\n            }    \r\n        ],\r\n        credits : {\r\n            enabled: false\r\n        }\r\n    };\r\n\r\n    constructor(public params:ParamsModel) {\r\n    }\r\n    ngAfterViewInit() {\r\n        this.comparechart = Highcharts.chart('comparecharts', this.column_options);\r\n        \r\n        this.linechart = Highcharts.chart('container', this.line_options);\r\n        \r\n        update_line(this.linechart, this.params.getParams(), true, null);\r\n        update_column(this.comparechart, this.params.getParams(), this.compare_data);\r\n        this.isInit = true;  \r\n    }\r\n    ngOnInit() {      \r\n    }\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (this.isInit) {\r\n            if (this.parentData != null) {\r\n                this.isButton = false;\r\n                if (this.isDestroyed) { this.comparechart = Highcharts.chart('comparecharts', this.column_options); this.linechart = Highcharts.chart('container', this.line_options); this.isDestroyed = false }\r\n                 this.linechart.destroy(); this.comparechart.destroy(); this.comparechart = Highcharts.chart('comparecharts', this.column_options); this.linechart = Highcharts.chart('container', this.line_options);\r\n                update_column(this.comparechart, this.params.getParams(), this.compare_data); update_line(this.linechart, this.params.getParams(), true, null);\r\n                this.swap_type(this.selectedType);\r\n                this.linechart.update({ subtitle: {text: 'Статистика с 28.04.2020 по 28.05.2020'}})\r\n            } else { if (!this.isDestroyed) {this.linechart.destroy(); this.comparechart.destroy(); this.isDestroyed = true } }\r\n            }\r\n    }\r\n    updateselected() {\r\n        this.compare_data = initselected(this.selectedValue, this.items_w, this.items_r);\r\n        console.log(this.compare_data)\r\n        update_column(this.comparechart, this.params.getParams(), this.compare_data);\r\n    }\r\n    change_data() {\r\n        this.selectedpoint = this.linechart.getSelectedPoints();\r\n        if (this.selectedpoint != 0) {\r\n            if (this.isButton) {\r\n                this.linechart.update({ subtitle: {text: 'Статистика с 28.04.2020 по 28.05.2020'}})\r\n                update_line(this.linechart, this.params.getParams(), true, null)\r\n                this.swap_type(this.selectedType);\r\n                this.isButton = false;\r\n            } else {\r\n                let x = this.selectedpoint[0].options.name;\r\n                this.linechart.update({ subtitle: {text: 'Статистика за ' + x}})\r\n                update_line(this.linechart, this.params.getParams(), false, x)\r\n                this.swap_type('column');\r\n                this.isButton = true;\r\n            }\r\n            }\r\n    }\r\n    swap_type(type: any) {\r\n        this.linechart.update({ chart: { type: type} });\r\n    }\r\n    updatecolor() {\r\n        this.comparechart.update({colors: [this.comp_colorConf, this.comp_colorCured, this.comp_colorDeaths]});\r\n    }\r\n    updatecolorline() {\r\n        this.linechart.update({colors: [this.line_colorConf, this.line_colorCured, this.line_colorDeaths]})\r\n    }\r\n    updateType() {\r\n        if (!this.isButton) { this.swap_type(this.selectedType) }\r\n    }\r\n}\r\n\r\nfunction initselected(country: string, items_1: any, items_2: any) {\r\n    console.log(country)\r\n    for (let dat of items_1) {\r\n        let cont = dat.country\r\n        console.log(cont);\r\n        if (cont == country) { return dat }\r\n    }\r\n    for (let dat of items_2) {\r\n        let cont = dat.country\r\n        console.log(cont);\r\n        if (cont == country) { return dat }\r\n    }\r\n    return null\r\n\r\n}\r\nfunction update_line(hichart: any, param: any, flag: boolean, datepoint: string) {\r\n    \r\n    const a = Object.values(data);\r\n    const b = a[0];\r\n    for (let dat of Object.values(b)) {\r\n        let cont = Object.values(dat)[0];\r\n\r\n        if (cont == param.country) {\r\n            if (flag) { dataArray = dat; }\r\n            else {\r\n                for (let item of Object.values(dat)[1]) {\r\n                    if (Object.values(item)[0] == datepoint) { dataArray = item }\r\n                }\r\n            }\r\n        }\r\n\r\n    };\r\n    let c = Object.values(data_w); \r\n    let d = c[0];\r\n    \r\n    for (let dat of Object.values(d)) {\r\n        let cont = Object.values(dat)[0];\r\n\r\n        if (cont == param.country)\r\n        {\r\n            if (flag) { dataArray = dat; }\r\n            else {\r\n                for (let item of Object.values(dat)[1]) {\r\n                    if (Object.values(item)[0] == datepoint) { dataArray = item }\r\n                }\r\n            }\r\n        }\r\n\r\n    };\r\n       \r\n    let dataconfirmed = [];\r\n    let datadeaths = [];\r\n    let datacured = [];\r\n    if (flag) {\r\n        dataArray.data.forEach(function (value) {\r\n            dataconfirmed.push([value.date, value.confirmed]);\r\n            datadeaths.push([value.date, value.deaths]);\r\n            datacured.push([value.date, value.cured]);\r\n        });\r\n    } else {\r\n        dataconfirmed.push([dataArray.date, dataArray.confirmed]);\r\n        datadeaths.push([dataArray.date, dataArray.deaths]);\r\n        datacured.push([dataArray.date, dataArray.cured]);\r\n    }\r\n    hichart.update({ chart: { type: 'line'} });\r\n    hichart.title.update({ text: param.country })\r\n    hichart.series[0].update({\r\n        name: \"Зараженные\",\r\n        data: dataconfirmed\r\n    });\r\n    hichart.series[1].update({\r\n        name: \"Вылечившиеся\",\r\n        data: datacured\r\n    });\r\n    hichart.series[2].update({\r\n        name: \"Умершие\",\r\n        data: datadeaths\r\n    });\r\n\r\n}\r\nfunction update_column(hichart: any, param: any, secparam) {\r\n    hichart.series[0].update({\r\n        name: param.country,\r\n        data: [\r\n            {name: 'Зараженные (актуальные данные)', y: (param.confirmed - (param.deaths + param.cured))},\r\n            {name: 'Выздоровевшие', y: param.cured},\r\n            {name: 'Умершие', y: param.deaths}\r\n        ]\r\n    });\r\n    if (secparam != null) {\r\n        hichart.series[1].update({\r\n            name: secparam.country,\r\n            data: [\r\n                \r\n                {name: 'Зараженные (актуальные данные)', y: (secparam.confirmed - (secparam.deaths + secparam.cured))},\r\n                {name: 'Выздоровевшие', y: secparam.cured},\r\n                {name: 'Умершие', y: secparam.deaths}\r\n            ],\r\n            visible: true\r\n        });\r\n    } else {\r\n        hichart.series[1].update({\r\n            name: \"Выберите страну\",\r\n            data: [0, 0, 0],\r\n            visible: false\r\n        }); \r\n    }\r\n}","<div class=\"charts-main-container\">\r\n    <div class=\"charts-h1\">\r\n        <h1>Данные, за исключением 28.05.2020 года, не являются действительными и были сгенерированы с использованием математических формул.</h1>\r\n    </div>\r\n        <div class=\"line-highcharts\" [style.visibility]=\"isDestroyed ? 'hidden' : 'visible'\" style=\"width: 100%\">\r\n                <mat-card class=\"line-card\" (click)=\"change_data()\"> \r\n                    <mat-card-content id=\"container\">\r\n                        \r\n                    </mat-card-content>\r\n                    <div class=\"side-menu-line-chart\">\r\n                        <mat-form-field style=\"width: 100%;\">\r\n                            <mat-label>Тип графика</mat-label>\r\n                            <mat-select [(ngModel)]=\"selectedType\" (ngModelChange)=\"updateType()\">\r\n                                <mat-option value='line'>Линейный</mat-option>\r\n                                <mat-option value='column'>Столбчатый</mat-option>\r\n                                <mat-option value='area'>Линейный с заполнением</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                        <div class=\"select-color\">\r\n                            <h2>Цвета серий</h2>\r\n                            <div class=\"selector-color\">\r\n                                <label>Зараженные</label>\r\n                                <mat-select [(ngModel)]=\"line_colorConf\" (ngModelChange)=\"updatecolorline()\" [style.backgroundColor]=\"line_colorConf\">\r\n                                    <mat-option value='#058DC7' [style.backgroundColor]=\"'#058DC7'\"></mat-option>\r\n                                    <mat-option value='#DDDF00' [style.backgroundColor]=\"'#DDDF00'\"></mat-option>\r\n                                    <mat-option value='#FF9655' [style.backgroundColor]=\"'#FF9655'\"></mat-option>\r\n                                </mat-select>\r\n                                    \r\n                            </div>\r\n                            <div class=\"selector-color\">\r\n                                <label>Выздоровевшие</label>\r\n                                    <mat-select [(ngModel)]=\"line_colorCured\" (ngModelChange)=\"updatecolorline()\" [style.backgroundColor]=\"line_colorCured\">\r\n                                        <mat-option value='#50B432' [style.backgroundColor]=\"'#50B432'\"></mat-option>\r\n                                        <mat-option value='#24CBE5' [style.backgroundColor]=\"'#24CBE5'\"></mat-option>\r\n                                        <mat-option value='#FFF263' [style.backgroundColor]=\"'#FFF263'\"></mat-option>\r\n                                    </mat-select>\r\n                            </div>\r\n                            <div class=\"selector-color\">\r\n                                <label>Умершие</label>\r\n                                <mat-select [(ngModel)]=\"line_colorDeaths\" (ngModelChange)=\"updatecolorline()\" [style.backgroundColor]=\"line_colorDeaths\">\r\n                                    <mat-option value='#ED561B' [style.backgroundColor]=\"'#ED561B'\"></mat-option>\r\n                                    <mat-option value='#64E572' [style.backgroundColor]=\"'#64E572'\"></mat-option>\r\n                                    <mat-option value='#6AF9C4' [style.backgroundColor]=\"'#6AF9C4'\"></mat-option>\r\n                                </mat-select>\r\n                            </div> \r\n                        </div>                  \r\n                    </div> \r\n                </mat-card>\r\n        </div>\r\n            \r\n        <div class=\"compare-highcharts\" [style.visibility]=\"isDestroyed ? 'hidden' : 'visible'\">\r\n                <div class=\"board-container\">\r\n                    <mat-card class=\"compare-card\">\r\n                        <mat-card-content id=\"comparecharts\" style=\"width: 100%;\">\r\n                        </mat-card-content>\r\n                        <div class=\"side-menu\">\r\n                            <mat-form-field style=\"width: 100%;\">\r\n                                <mat-label>Страна/город</mat-label>\r\n                                <mat-select [(ngModel)]=\"selectedValue\" (ngModelChange)=\"updateselected()\">\r\n                                    <mat-option>None</mat-option>\r\n                                    <mat-option *ngFor=\"let item of this.items_w\" [value]=\"item.country\" >{{item.country}}</mat-option>\r\n                                    <mat-option *ngFor=\"let item of this.items_r\" [value]=\"item.country\" >{{item.country}}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                            <div class=\"select-color\">\r\n                                <h2>Цвета серий</h2>\r\n                                <div class=\"selector-color\">\r\n                                    <label>Зараженные</label>\r\n                                    <mat-select [(ngModel)]=\"comp_colorConf\" (ngModelChange)=\"updatecolor()\" [style.backgroundColor]=\"comp_colorConf\">\r\n                                        <mat-option value='#058DC7' [style.backgroundColor]=\"'#058DC7'\"></mat-option>\r\n                                        <mat-option value='#DDDF00' [style.backgroundColor]=\"'#DDDF00'\"></mat-option>\r\n                                        <mat-option value='#FF9655' [style.backgroundColor]=\"'#FF9655'\"></mat-option>\r\n                                    </mat-select>\r\n                                        \r\n                                </div>\r\n                                <div class=\"selector-color\">\r\n                                    <label>Выздоровевшие</label>\r\n                                        <mat-select [(ngModel)]=\"comp_colorCured\" (ngModelChange)=\"updatecolor()\" [style.backgroundColor]=\"comp_colorCured\">\r\n                                            <mat-option value='#50B432' [style.backgroundColor]=\"'#50B432'\"></mat-option>\r\n                                            <mat-option value='#24CBE5' [style.backgroundColor]=\"'#24CBE5'\"></mat-option>\r\n                                            <mat-option value='#FFF263' [style.backgroundColor]=\"'#FFF263'\"></mat-option>\r\n                                        </mat-select>\r\n                                </div>\r\n                                <div class=\"selector-color\">\r\n                                    <label>Умершие</label>\r\n                                    <mat-select [(ngModel)]=\"comp_colorDeaths\" (ngModelChange)=\"updatecolor()\" [style.backgroundColor]=\"comp_colorDeaths\">\r\n                                        <mat-option value='#ED561B' [style.backgroundColor]=\"'#ED561B'\"></mat-option>\r\n                                        <mat-option value='#64E572' [style.backgroundColor]=\"'#64E572'\"></mat-option>\r\n                                        <mat-option value='#6AF9C4' [style.backgroundColor]=\"'#6AF9C4'\"></mat-option>\r\n                                    </mat-select>\r\n                                </div> \r\n                            </div>                                           \r\n                        </div>    \r\n                    </mat-card>\r\n                </div>   \r\n        </div>\r\n</div>","import { Injectable } from '@angular/core';\nimport * as data from 'src/app/df.json';\n\nclass item {\nconfirmed: number;\ncountry: string;\ncured: number;\ndeath_per: number;\ndeaths: number;\nnum: number;\n}\n    @Injectable()\n\n    export class ParamsModel {\n        \n        items: any = (data as any).default;\n        chosenitmf: item = this.items[0];\n        chosenitms: item = this.items[1];\n        \n\n        public setParams(param) {\n            this.chosenitmf = param;\n        }\n\n        public getParams() {\n            return this.chosenitmf;\n        }\n    }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\n\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}